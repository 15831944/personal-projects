<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<!-- saved from url=(0226)http://72.14.253.104/search?q=cache:gf8s981FSMAJ:www.freshpatents.com/Methods-for-generating-control-points-for-cubic-bezier-curves-dt20060302ptan20060044305.php%3Ftype%3Ddescription+AddBezier+equation&hl=vi&ct=clnk&cd=5&gl=vn -->
<HTML><HEAD><TITLE>Methods for generating control points for cubic bezier curves patent invention</TITLE>
<META http-equiv=Content-Type content="text/html; charset=windows-1252">
<META content="MSHTML 6.00.2900.3132" name=GENERATOR></HEAD>
<BODY bgColor=#ffffff>
<TABLE width="100%" border=1>
  <TBODY>
  <TR>
    <TD>
      <TABLE cellSpacing=0 cellPadding=10 width="100%" bgColor=#ffffff border=1 
      color="#ffffff">
        <TBODY>
        <TR>
          <TD><FONT face="" color=black size=-1>&#272;by la&#768; <A 
            href="http://www.google.com/intl/vi/help/features.html#cached"><FONT 
            color=blue>cache</FONT></A> cu&#777;a <A 
            href="http://www.freshpatents.com/Methods-for-generating-control-points-for-cubic-bezier-curves-dt20060302ptan20060044305.php?type=description"><FONT 
            color=blue>http://www.freshpatents.com/Methods-for-generating-control-points-for-cubic-bezier-curves-dt20060302ptan20060044305.php?type=description</FONT></A> 
            &#273;&#432;&#417;&#803;c l&#432;u nga&#768;y 20 Thang N&#259;m 2007 16:09:50 GMT. cu&#777;a <B><FONT 
            color=#0039b6>G</FONT> <FONT color=#c41200>o</FONT> <FONT 
            color=#f3c518>o</FONT> <FONT color=#0039b6>g</FONT> <FONT 
            color=#30a72f>l</FONT> <FONT color=#c41200>e</FONT></B><BR>Bt&#803; nh&#417;&#769; 
            cache cu&#777;a <B><FONT color=#0039b6>G</FONT> <FONT 
            color=#c41200>o</FONT> <FONT color=#f3c518>o</FONT> <FONT 
            color=#0039b6>g</FONT> <FONT color=#30a72f>l</FONT> <FONT 
            color=#c41200>e</FONT></B> l` m&#7897;t b&#7843;n sao c&#7911;a trang web chu&#769;ng tti 
            &#273;a&#771; l&#432;u la&#803;i khi thu l&#432;&#7907;m trjn Web.<BR>Trang n`y cs th&#7875; &#273;a&#771; thay &#273;&#7893;i 
            kj&#777; t&#432;&#768; khi &#273;o&#769;. Ha&#771;y b&#7845;m va&#768;o &#273;by &#273;&#7875; t&#7899;i <A 
            href="http://www.freshpatents.com/Methods-for-generating-control-points-for-cubic-bezier-curves-dt20060302ptan20060044305.php?type=description"><FONT 
            color=blue>trang m&#7899;i nh&#7845;t</FONT></A> ma&#768; khtng &#273;a&#769;nh db&#769;u.<BR>Trang 
            &#273;&#432;&#417;&#803;c l&#432;u trong bt&#803; nh&#417;&#769; cache n`y cs th&#7875; ch&#7913;a nh&#7919;ng hlnh &#7843;nh khtng 
            t&#7891;n t&#7841;i n&#7919;a. Bb&#769;m v`o &#273;by &#273;&#7875; xem <A 
            href="http://72.14.253.104/search?q=cache:gf8s981FSMAJ:www.freshpatents.com/Methods-for-generating-control-points-for-cubic-bezier-curves-dt20060302ptan20060044305.php%3Ftype%3Ddescription+AddBezier+equation&amp;hl=vi&amp;gl=vn&amp;strip=1"><FONT 
            color=blue>ph&#7847;n v&#259;n b&#7843;n &#273;&#432;&#7907;c l&#432;u trong bt&#803; nh&#417;&#769; 
            cache</FONT></A>.<BR>Hcy s&#7917; d&#7909;ng URL sau &#273;&#7875; lijn k&#7871;t hay chi&#777; mu&#803;c 
            trang n`y: 
            <CODE>http://www.google.com/search?q=cache:gf8s981FSMAJ:www.freshpatents.com/Methods-for-generating-control-points-for-cubic-bezier-curves-dt20060302ptan20060044305.php%3Ftype%3Ddescription+AddBezier+equation&amp;hl=vi&amp;ct=clnk&amp;cd=5&amp;gl=vn</CODE></FONT><BR><BR>
            <CENTER><FONT size=-2><I>Google khtng cs m&#7897;t m&#7889;i lijn h&#7879; n`o &#273;&#7871;n cac 
            tac gi&#7843; c&#7911;a cac trang web n`y c&#361;ng nh&#432; khtng ch&#7883;u trach nhi&#7879;m v&#7873; n&#7897;i 
            dung c&#7911;a chzng.</I></FONT></CENTER></TD></TR>
        <TR>
          <TD>
            <TABLE cellSpacing=0 cellPadding=0 border=0>
              <TBODY>
              <TR>
                <TD><FONT face="" color=black size=-1>Nh&#7919;ng cu&#803;m t&#7915; tlm ki&#7871;m 
                  na&#768;y &#273;c &#273;&#432;&#7907;c tt sang:&nbsp;</FONT></TD>
                <TD bgColor=#ffff66><B><FONT face="" color=black 
                  size=-1>addbezier&nbsp;</FONT></B></TD>
                <TD bgColor=#a0ffff><B><FONT face="" color=black 
                  size=-1>equation&nbsp;</FONT></B></TD></TR></TBODY></TABLE></TD></TR></TBODY></TABLE></TD></TR></TBODY></TABLE>
<HR>

<DIV style="POSITION: relative"><LINK media=screen 
href="Methods for generating control points for cubic bezier curves patent invention_files/primary.css" 
type=text/css rel=stylesheet><LINK 
href="http://www.freshpatents.com/favicon.ico" rel="shortcut icon">
<META 
content="Methods for generating control points for cubic bezier curves patent patents invention" 
name=keywords>
<META 
content="Methods and devices for generating a cubic Bézier curve between a first point and a second point from a sequence of ordered points. One embodiment provides a method that includes selecting a third point from the sequence of ordered points; determining a first control point based on the first point, " 
name=description>
<META content=ALL name=ROBOTS>
<SCRIPT language=javascript type=text/javascript>
   var http_request = false;
   function makeRequest(url, parameters) {
      http_request = false;
      if (window.XMLHttpRequest) { // Mozilla, Safari,...
         http_request = new XMLHttpRequest();
         if (http_request.overrideMimeType) {
            http_request.overrideMimeType('text/xml');
         }
      } else if (window.ActiveXObject) { // IE
         try {
            http_request = new ActiveXObject("Msxml2.XMLHTTP");
         } catch (e) {
            try {
               http_request = new ActiveXObject("Microsoft.XMLHTTP");
            } catch (e) {}
         }
      }
      if (!http_request) {
         alert('Cannot create XMLHTTP instance');
         return false;
      }
      http_request.onreadystatechange = alertContents;
      http_request.open('GET', url + parameters, true);
      http_request.send(null);
   }

   function alertContents() {
      if (http_request.readyState == 4) {
         if (http_request.status == 200) {
            //alert(http_request.responseText);
            result = http_request.responseText;
            document.getElementById('myspan').innerHTML = result;            
         } else {
            alert('There was a problem with the request.');
         }
      }
   }
   
   function get(obj) {
      var getstr = "?";
      for (i=0; i<obj.childNodes.length; i++) {
         if (obj.childNodes[i].tagName == "INPUT") {
            if (obj.childNodes[i].type == "hidden") {
               getstr += obj.childNodes[i].name + "=" + obj.childNodes[i].value + "&";
            }				 
            if (obj.childNodes[i].type == "text") {
               getstr += obj.childNodes[i].name + "=" + obj.childNodes[i].value + "&";
            }
            if (obj.childNodes[i].type == "checkbox") {
               if (obj.childNodes[i].checked) {
                  getstr += obj.childNodes[i].name + "=" + obj.childNodes[i].value + "&";
               } else {
                  getstr += obj.childNodes[i].name + "=&";
               }
            }
            if (obj.childNodes[i].type == "radio") {
               if (obj.childNodes[i].checked) {
                  getstr += obj.childNodes[i].name + "=" + obj.childNodes[i].value + "&";
               }
            }
         }   
         if (obj.childNodes[i].tagName == "SELECT") {
            var sel = obj.childNodes[i];
            getstr += sel.name + "=" + sel.options[sel.selectedIndex].value + "&";
         }
         
      }
makeRequest('http://www.freshpatents.com/ajax/login_notify.php', getstr);			
   }
</SCRIPT>
<!-- FIRST LINE -->
<TABLE cellSpacing=0 cellPadding=3 width=750 bgColor=white border=0>
  <TBODY>
  <TR>
    <TD vAlign=top>&nbsp;&nbsp;<STRONG>FREE patent keyword monitoring</STRONG> 
      and additional FREE benefits. <IMG height=11 
      alt="/images/triangleright (1K)" 
      src="Methods for generating control points for cubic bezier curves patent invention_files/triangleright.gif" 
      width=8><STRONG> <A href="https://www.freshpatents.com/login/">REGISTER 
      now for FREE</A></STRONG> <IMG height=11 alt="triangleleft (1K)" 
      src="Methods for generating control points for cubic bezier curves patent invention_files/triangleleft.gif" 
      width=8> </TD></TR></TBODY></TABLE><!-- IMAGES/ICONS -->
<TABLE cellSpacing=0 cellPadding=0 width=750 border=0>
  <TBODY>
  <TR>
    <TD width=750><A href="http://www.freshpatents.com/"><IMG height=68 
      alt="Fresh Patents" 
      src="Methods for generating control points for cubic bezier curves patent invention_files/freshpatentsnav7.gif" 
      width=272 border=0></A> <!--  <img alt="" src="http://www.freshpatents.com/images/freshpatentsnav7_icons.gif" height="68" width="349" border=0 USEMAP="#freshpatentsnav7_icons_Map"/> 
--><IMG 
      height=68 alt="Fresh Patents" 
      src="Methods for generating control points for cubic bezier curves patent invention_files/freshpatentsnav8_icons.gif" 
      width=406 useMap=#freshpatentsnav8_icons_Map border=0> 
</TD></TR></TBODY></TABLE><!--
<MAP NAME="freshpatentsnav7_icons_Map">
<AREA SHAPE="rect" ALT="browse patent apps by agents" COORDS="280,0,348,67" HREF="http://www.freshpatents.com/agent-patent-law-firm-directory-a.php">
<AREA SHAPE="rect" ALT="browse patent apps by inventors" COORDS="210,0,280,67" HREF="http://www.freshpatents.com/patent-inventor-directory-indrraa.php">
<AREA SHAPE="rect" ALT="browse patent apps by industry" COORDS="138,0,210,67" HREF="http://www.freshpatents.com/browsebyindustry-bclx1.php">
<AREA SHAPE="rect" ALT="browse patents by location" COORDS="67,0,139,67" HREF="http://www.freshpatents.com/city-country-patent-directory.php">
<AREA SHAPE="rect" ALT="monitor patent applications" COORDS="0,0,67,67" HREF="https://www.freshpatents.com/account/monitor/">
</MAP>
--><MAP 
name=freshpatentsnav8_icons_Map><AREA shape=RECT 
  alt="browse patent apps by agents" coords=342,0,404,68 
  href="http://www.freshpatents.com/agent-patent-law-firm-directory-a.php"><AREA 
  shape=RECT alt="browse patent apps by inventors" coords=277,0,340,68 
  href="http://www.freshpatents.com/patent-inventor-directory-indrraa.php"><AREA 
  shape=RECT alt="browse patent apps by industry" coords=198,0,272,68 
  href="http://www.freshpatents.com/browsebyindustry-bclx1.php"><AREA shape=RECT 
  alt="browse patents by location" coords=138,0,196,68 
  href="http://www.freshpatents.com/city-country-patent-directory.php"><AREA 
  shape=RECT alt="save patent applications" coords=60,0,133,68 
  href="https://www.freshpatents.com/account/organizer/list_folder_az.php?fset=default"><AREA 
  shape=RECT alt="monitor patent applications" coords=0,0,59,68 
  href="https://www.freshpatents.com/account/monitor/"></MAP><!-- SEARCH -->
<TABLE cellSpacing=0 cellPadding=3 width=750 border=0>
  <TBODY>
  <TR>
    <TD vAlign=top>
      <FORM name=frmKW action=http://www.freshpatents.com/search/searchform.php 
      method=post><SELECT name=pg> <OPTION value=SearchTitleAbstracts 
        selected>Title/Abstract/Num.</OPTION><OPTION value=Google>Site 
        Search</OPTION></SELECT> &nbsp;&nbsp;<INPUT maxLength=100 size=30 
      name=keywords>&nbsp;&nbsp;<BUTTON name=submit type=submit>FreshPatents 
      Search</BUTTON> </FORM><!--  <input type="radio" checked/> Title/Abstract <input type="radio" /> Location <input type="radio" /> All --></TD></TR></TBODY></TABLE>
<TABLE cellSpacing=0 cellPadding=4 width=950 border=0>
  <TBODY>
  <TR>
    <TD vAlign=top width=160 rowSpan=2>
      <SCRIPT type=text/javascript><!--
google_ad_client = "pub-0988628760264603";
google_ad_width = 160;
google_ad_height = 600;
google_ad_format = "160x600_as";
google_ad_type = "text_image";
google_ad_channel = "4048608457+2081950281";
google_color_border = "FFFFFF";
google_color_bg = "FFFFFF";
google_color_link = "0000CC";
google_color_url = "c0c0c0";
google_color_text = "000000";
//--></SCRIPT>

      <SCRIPT 
      src="Methods for generating control points for cubic bezier curves patent invention_files/show_ads.js" 
      type=text/javascript>
</SCRIPT>
    </TD>
    <TD width=790 colSpan=2></TD></TR>
  <TR>
    <TD vAlign=top width=675>
      <TABLE>
        <TBODY>
        <TR>
          <TD><IMG height=16 alt="site info" 
            src="Methods for generating control points for cubic bezier curves patent invention_files/info.gif" 
            width=16 align=absMiddle>&nbsp;<A 
            href="https://www.freshpatents.com/account/">Site 
            News</A>&nbsp;&nbsp;|&nbsp;&nbsp;<IMG height=16 alt=monitor 
            src="Methods for generating control points for cubic bezier curves patent invention_files/clipboard.gif" 
            width=16 align=absMiddle>&nbsp;<A 
            href="https://www.freshpatents.com/account/monitor/">Monitor 
            Keywords</A>&nbsp;&nbsp;|&nbsp;&nbsp;<IMG height=16 
            alt="monitor archive" 
            src="Methods for generating control points for cubic bezier curves patent invention_files/folder.gif" 
            width=16 align=absMiddle>&nbsp;<A 
            href="https://www.freshpatents.com/account/monitor/archive.php">Monitor 
            Archive</A>&nbsp;&nbsp;|&nbsp;&nbsp;<IMG height=16 alt=organizer 
            src="Methods for generating control points for cubic bezier curves patent invention_files/config.gif" 
            width=16 align=absMiddle>&nbsp;<A 
            href="https://www.freshpatents.com/account/organizer/list_folder_az.php?fset=default">Organizer</A>&nbsp;&nbsp;|&nbsp;&nbsp;<IMG 
            height=16 alt="account info" 
            src="Methods for generating control points for cubic bezier curves patent invention_files/user.gif" 
            width=16 align=absMiddle>&nbsp;<A 
            href="https://www.freshpatents.com/account/info/">Account 
            Info</A>&nbsp;&nbsp;|&nbsp;&nbsp;</TD></TR></TBODY></TABLE><A 
      href="http://www.freshpatents.com/Computer-graphics-processing-operator-interface-processing-and-selective-visual-display-systems-dtnewntc345.php">03/02/06</A> 
      | 61 views | <SPAN style="BACKGROUND-COLOR: #ffff99"><STRONG><FONT 
      color=green>#20060044305</FONT></STRONG></SPAN> | Patent Apps: <A 
      href="http://www.freshpatents.com/Power-supply-apparatus-and-method-dt20060302ptan20060044303.php">Prev</A> 
      - <A 
      href="http://www.freshpatents.com/Rendering-apparatus-and-method-for-a-real-time-3d-ultrasound-diagnostic-system-dt20060302ptan20060044306.php">Next</A> 
      | Industry: <A 
      href="http://www.freshpatents.com/Computer-graphics-processing-operator-interface-processing-and-selective-visual-display-systems-dtnewntc345.php">USPTO 
      Class 345</A>&nbsp;&nbsp;&nbsp;<A 
      href="http://rss.freshpatents.com/natlclass/Computer-graphics-processing-operator-interface-processing-and-selective-visual-display-systems.xml"><IMG 
      height=14 alt="345 rss/xml feed" 
      src="Methods for generating control points for cubic bezier curves patent invention_files/xml.gif" 
      width=36 align=absMiddle border=0></A>&nbsp;&nbsp;<A 
      href="https://www.freshpatents.com/account/organizer/list_folder_az.php?fset=default"><IMG 
      height=14 alt="monitor keywords" 
      src="Methods for generating control points for cubic bezier curves patent invention_files/iconsm_monitorkeywords.gif" 
      width=100 align=absMiddle border=0></A>
      <H1>Methods for generating control points for cubic bezier 
      curves</H1></FORM>
      <FORM name=myform action=javascript:;><INPUT 
      onclick=javascript:get(this.parentNode); type=image 
      src="Methods for generating control points for cubic bezier curves patent invention_files/icon_addpatent_words.gif" 
      value=Submit name=button> <INPUT onclick=javascript:get(this.parentNode); 
      type=image 
      src="Methods for generating control points for cubic bezier curves patent invention_files/icon_vieworganizer_words.gif" 
      value=Submit name=button> <INPUT onclick=javascript:get(this.parentNode); 
      type=image 
      src="Methods for generating control points for cubic bezier curves patent invention_files/icon_monitorkeywords.gif" 
      value=Submit name=button><INPUT type=hidden 
      value="Methods for generating control points for cubic bezier curves|/Methods-for-generating-control-points-for-cubic-bezier-curves-dt20060302ptan20060044305.php" 
      name=lastapp><INPUT type=hidden value=20060044305 name=pn_post><INPUT 
      type=hidden value=345 name=AppMainClass><INPUT type=hidden value=345419000 
      name=AppSubClass><INPUT type=hidden value=20060302 name=AppDate><INPUT 
      type=hidden 
      value="Methods for generating control points for cubic bezier curves" 
      name=ApplicationTitle><INPUT type=hidden value=1 name=an></FORM><SPAN 
      id=myspan name="myspan"></SPAN>
      <SCRIPT type=text/javascript><!--
google_ad_client = "pub-0988628760264603";
google_alternate_ad_url = "http://www.freshpatents.com/go/alternate1.php";
google_ad_width = 728;
google_ad_height = 90;
google_ad_format = "728x90_as";
google_ad_type = "text";
google_ad_channel = "2703735027+4048608457";
google_color_border = "FFFFFF";
google_color_bg = "FFFFFF";
google_color_link = "0000CC";
google_color_url = "c0c0c0";
google_color_text = "000000";
//--></SCRIPT>

      <SCRIPT 
      src="Methods for generating control points for cubic bezier curves patent invention_files/show_ads.js" 
      type=text/javascript>
</SCRIPT>
      <BR><A 
      href="http://www.freshpatents.com/Methods-for-generating-control-points-for-cubic-bezier-curves-dt20060302ptan20060044305.php">Brief 
      Patent Description</A> - <STRONG>Full Patent Description</STRONG> - <A 
      href="http://www.freshpatents.com/Methods-for-generating-control-points-for-cubic-bezier-curves-dt20060302ptan20060044305.php?type=claims">Patent 
      Application Claims</A>&nbsp;&nbsp;<A 
      href="https://www.freshpatents.com/account/organizer/list_folder_az.php?fset=default"><IMG 
      height=14 alt="monitor keywords" 
      src="Methods for generating control points for cubic bezier curves patent invention_files/iconsm_monitorkeywords.gif" 
      width=100 align=absMiddle border=0></A> <BR><BR><BR><BR>BACKGROUND OF THE 
      INVENTION <BR><BR>[0001] Modern operating systems use cubic Bezier curves 
      extensively to represent many user interface components. For example, the 
      individual glyphs of a font are typically represented as a sequence of 
      cubic Bezier curves. Operating system must therefore contain functionality 
      for generating cubic Bezier curves in order to display textual interfaces 
      and graphical interfaces. <BR><BR>[0002] Generally, a cubic Bezier curve 
      is defined by a start point (x.sub.0, y.sub.0), an end point (x.sub.3, 
      y.sub.3), and two control points (x.sub.1, y.sub.1) and (x.sub.2, 
      y.sub.2). The two control points determine the shape of the curve. Two 
      cubic equations define the points on the curve. Both equations are 
      evaluated for an arbitrary number of values of t between 0 and 1. One <B 
      style="COLOR: black; BACKGROUND-COLOR: #a0ffff">equation</B> provides 
      values for x, and the other provides values for y. As values for t are 
      supplied to the equations, the points (x(t), y(t)) define the line between 
      the start point and the end point. Exemplary cubic Bezier curve equations 
      are illustrated below. x(t)=a.sub.xt.sup.3+b.sub.xt.sup.2+c.sub.xt+x.sub.0 
      y(t)=a.sub.yt.sup.3+b.sub.yt.sup.2+c.sub.yt+y.sub.0 The values of the 
      coefficients a.sub.x, b.sub.x, c.sub.x, a.sub.y, b.sub.y, and c.sub.y can 
      be determined using the four known points. <BR><BR>SUMMARY OF THE 
      INVENTION <BR><BR>[0003] Most existing methods and systems for generating 
      a sequence of cubic Bezier curves use advanced math functions, such as 
      derivatives, integrals, and statistical analysis, to determine precise 
      control points. Some of the advanced math functions used may not be 
      supported within an operating system's application programming interface 
      ("API"). Thus in some instances, it is necessary to add advanced math 
      functions to an operating system's API specifically for the purpose of 
      generating cubic Bezier curves. However, using advanced math functions is 
      generally not ideal. Usually, advance math functions require the use of 
      third-party software, or a significant investment in terms of programming 
      time and effort. Furthermore, advanced math functions typically do not 
      perform as well as the simpler math functionality prepackaged within an 
      operating system's API. <BR><BR>[0004] Thus it would be useful to be able 
      to generate control points for a cubic Bezier or smooth curve without the 
      use of advanced math functions. <BR><BR>[0005] Some embodiments of the 
      invention provide a method of generating a control point for a cubic 
      Bezier curve between a first point and a second point in a sequence of 
      ordered points using three consecutive points from the sequence of ordered 
      points. The three consecutive points include the first point, the second 
      point, and a third point. The generated control point is based on 
      coordinates of the first, second, and third points. <BR><BR>[0006] 
      Additional embodiments provide a method of generating a control point for 
      a cubic Bezier curve between a first point and a second point in a 
      sequence of ordered points. The method includes selecting a third point 
      from the sequence of ordered points and determining a first line segment 
      between the first point and the second point and a second line segment 
      between the second point and the third point. The method further includes 
      determining a first horizontal reference line containing the first point 
      and a second horizontal reference line containing the second point. The 
      method also includes determining a first angle between the first 
      horizontal reference line and the first line segment and a second angle 
      between the second horizontal reference line and the first line segment, 
      and a third angle between the second horizontal reference line and the 
      second line segment. Then generating a fourth angle based on the first 
      angle and the average of the second and third angles, generating a control 
      distance based on the first line segment, and generating the control point 
      based on the fourth angle and the control distance. <BR><BR>[0007] Another 
      embodiment provides a method of generating a first control point for a 
      cubic Bezier curve between a first point and a second point in a sequence 
      of ordered points. The method includes selecting a third point from the 
      sequence of ordered points and determining a first line segment between 
      the first point and the second point and a second line segment between the 
      second point and the third point. The method further includes determining 
      a first horizontal reference line containing the first point and 
      determining a first angle between the first horizontal reference line and 
      the first line segment. The method includes determining a second 
      horizontal reference line containing the second point and determining a 
      second angle between the second horizontal reference line and the first 
      line segment, and determining a third angle between the second horizontal 
      reference line and the second line segment. The method also includes 
      generating a fourth angle based on the first angle and the average of the 
      second and third angles, generating a first control distance based on the 
      first line segment, and generating the first control point based on the 
      fourth angle and the control distance. <BR><BR>[0008] Yet another 
      embodiment provides a method of generating a cubic Bezier curve between a 
      first point and a second point from a sequence of ordered points. The 
      method includes selecting a third point from the sequence of ordered 
      points; determining a first control point based on the first point, the 
      second point, and the third point; determining a second control point 
      based on the first point, the second point, and the third point; and 
      generating a cubic Bezier curve between the first point and the second 
      point using the first control point and the second control point. 
      <BR><BR>[0009] Additional embodiments provide a method of generating a 
      cubic Bezier curve for a sequence of ordered points. The method includes 
      selecting a first set of three consecutive points from the sequence of 
      points. The first set contains a first point, a second point, and a third 
      point. The method further includes determining a first line segment 
      between the first point and the second point; determining a second line 
      segment between the second point and the third point; determining a first 
      horizontal reference line containing the second point; determining a first 
      angle between the first horizontal reference line and the first line 
      segment; determining a second angle between the first horizontal reference 
      line and the second line segment; generating a third angle from the first 
      angle and the second angle; generating a first control distance from the 
      first line segment and the second line segment; and generating a first 
      control point based on the third angle and the first control distance. To 
      generate a second control point, the method includes selecting a second 
      set of three consecutive points from the sequence of points. The second 
      set contains the second point, the third point, and a fourth point. The 
      method further includes determining a third line segment between the third 
      point and the fourth point; determining a second horizontal reference line 
      containing the third point; determining a fourth angle between the second 
      horizontal reference line and the second line segment; determining a fifth 
      angle between the second horizontal reference line and the third line 
      segment; generating a sixth angle from the fourth angle and the fifth 
      angle; generating a second control distance from the second line segment 
      and the third line segment; generating a second control point based on the 
      sixth angle and the second control distance; and generating a cubic Bezier 
      curve between the second point and the third point using the first control 
      point and the second control point. <BR><BR>[0010] Another embodiment 
      provides computer-readable medium containing instructions for selecting a 
      first set of three consecutive points from an ordered sequence of points, 
      the first set including a first point, a middle point, and a third point. 
      The computer-readable medium further includes instructions for determining 
      a first control point based on the first set; selecting a second set of 
      three consecutive points from an ordered sequence of points, the second 
      set including at least two points of the first set and a fourth point; and 
      determining a second control point based on the second set. <BR><BR>[0011] 
      Yet another embodiment provides an operating system configured to select a 
      first set of three consecutive points from an ordered sequence of points. 
      The first set includes a first point, a middle point, and a third point. 
      The operating system is further configured to determine a first control 
      point based on the first set and to select a second set of three 
      consecutive points from an ordered sequence of points. The second set 
      includes at least two points of the first set and a fourth point, and the 
      operating system is configured to determine a second control point based 
      on the second set. <BR><BR>[0012] Other features and aspects of 
      embodiments of the invention will become apparent to those skilled in the 
      art upon review of the following detailed description, claims, and 
      drawings. <BR><BR>BRIEF DESCRIPTION OF THE DRAWINGS <BR><BR>[0013] In the 
      drawings: <BR><BR>[0014] FIG. 1 illustrates an exemplary cubic Bezier 
      curve. <BR><BR>[0015] FIG. 2 illustrates another exemplary cubic Bezier 
      curve. <BR><BR>[0016] FIG. 3 is a schematic illustration of an exemplary 
      system for generating a cubic Bezier curve. <BR><BR>[0017] FIG. 4 is 
      another schematic illustration of an exemplary system for generating a 
      cubic Bezier curve. <BR><BR>[0018] FIG. 5 illustrates an exemplary set of 
      points. <BR><BR>[0019] FIGS. 6-21 illustrate exemplary steps of methods 
      for determining control points for cubic Bezier curves associated with the 
      set of points of FIG. 5. <BR><BR>[0020] FIG. 22 illustrates a series of 
      cubic Bezier curves connecting the set of points of FIG. 5. <BR><BR>[0021] 
      It is to be understood that the invention is not limited in its 
      application to the details of construction and the arrangement of 
      components set forth in the following description or illustrated in the 
      drawings. The invention is capable of other embodiments and of being 
      practiced or of being carried out in various ways. Also, it is to be 
      understood that the phraseology and terminology used herein is for the 
      purpose of description and should not be regarded as limiting. The use of 
      "including," "comprising," or "having" and variations thereof herein is 
      meant to encompass the items listed thereafter and equivalents thereof as 
      well as additional items. Unless limited otherwise, the terms "connected," 
      "coupled," and "mounted," and variations thereof herein are used broadly 
      and encompass direct and indirect connections, couplings, and mountings. 
      In addition, the terms "connected" and "coupled" and variations thereof 
      are not restricted to physical or mechanical connections or couplings. 
      <BR><BR>DETAILED DESCRIPTION <BR><BR>[0022] Before embodiments of the 
      invention are described in detail a brief review of the cubic Bezier 
      curves is provided. Nonetheless, it is assumed that the reader is familiar 
      with cubic Bezier curve construction. <BR><BR>[0023] As noted above, cubic 
      Bezier curves are defined by two equations and connect a starting point 
      and an ending point under the direction of two control points. A point, as 
      used within this application, refers to a geometric element that has a 
      position but no extension. Coordinates may define a point, and when 
      speaking of creating cubic Bezier curves for display on a monitor or 
      screen, a pixel may represent a point. <BR><BR>[0024] FIG. 1 illustrates 
      an exemplary cubic Bezier curve 30. The cubic Bezier curve 30 has a start 
      point 32, an end point 34, and two control points 36 and 38. The 
      connecting curve or spline 40 connects the start point 32 and the end 
      point 34. The coordinates of the control points 36 and 38 influence the 
      direction and shape of the spline 40. The control points 36 and 38 can be 
      thought of as magnets that attract the spline 40. The shape of the spline 
      40 is influenced by the attraction of control points. As with magnets, the 
      location of the control points influence the amount of attraction 
      generated on the spline 40. FIG. 2, for example, illustrates another 
      exemplary cubic Bezier curve 42. The cubic Bezier curve 42 illustrated in 
      FIG. 2 has the same start point 32, end point 34, and control point 36 as 
      the cubic Bezier curve 30 illustrated in FIG. 1. The cubic Bezier curve 
      42, however, has a control point 44 that is different (has different 
      coordinates) than the control point 38 of the cubic Bezier curve 30 
      illustrated in FIG. 1. As illustrated in FIG. 2, the change of a single 
      control point creates a different shaped spline 46 connecting the same 
      start point 32 and end point 34. <BR><BR>[0025] FIG. 3 illustrates an 
      exemplary system 50 for generating a cubic Bezier curve. The system 50 
      includes an operating system 52, an application programming interface 
      ("API") 54, a graphics rendering application 56, and cubic Bezier curve 
      logic 58. In some embodiments, the cubic Bezier curve logic 58 generates 
      control points for cubic Bezier curves. The graphics rendering application 
      56 may generate the start point, end point, and, using the cubic Bezier 
      curve logic 58, one or more control points for a cubic Bezier curve. The 
      graphics rendering application 56 may use the API 54 of the operating 
      system 52 to pass the points to the operating system 52 and invoke the 
      operating system 52 to instruct a display device such as a computer 
      monitor to display a cubic Bezier curve based on the provided point 
      parameters. For example, a graphical device interface ("GDI") of the 
      Windows.RTM. operating system manufactured by the Microsoft.RTM. 
      Corporation provides method calls such as GraphicsPath::<B 
      style="COLOR: black; BACKGROUND-COLOR: #ffff66">AddBezier</B>(point1, 
      point2, point3, point4) and Graphics::DrawBezier(pen, point1, point2, 
      point3, point4). The parameters of these operating system calls contain 
      the points necessary to generate a cubic Bezier curve, including the 
      control points. The operating system 52 uses the passed parameters to 
      generate the requested cubic Bezier curves using cubic Bezier curve 
      equations, such as those presented earlier. Furthermore, the operating 
      system 52 may instruct a display device, such as a computer monitor, to 
      graphically display the generated cubic Bezier curves. As should be 
      apparent, the graphics rendering application 56 and the Bezier curve logic 
      58 can be stored on various computer readable media. <BR><BR>[0026] In 
      another embodiment, as illustrated in FIG. 4, a system 60 is used to 
      generate cubic Bezier curves. The system 60 includes the operating system 
      52, an API 62, the graphics rendering application 56, and the cubic Bezier 
      curve logic 58. In contrast to the system 50 illustrated in FIG. 3, the 
      cubic Bezier curve logic 58 is contained within the operating system 52. 
      Using the system 60, the operating system 52 may provide control point 
      generation internally, using the cubic Bezier curve logic 58. The graphics 
      rendering application 56 may pass parameters through the API 62 and 
      provide the operating system 52 with the start point and end point for a 
      cubic Bezier curve. The operating system 52 may use the cubic Bezier curve 
      logic 58 to generate the needed control points, and may further instruct a 
      display device to display a cubic Bezier curve based on the start point 
      and end point provided by the graphics rendering application 56 and the 
      one or more generated control points. <BR><BR>[0027] FIG. 5 illustrates an 
      exemplary set of points 80. The set 80 includes a first end point 82, a 
      second non-end point 84, and a third end point 86. The points 82, 84, and 
      86 of the set 80 may be ordered, and the order may indicate a sequence for 
      connecting the points. The first end point 82 and the third end point 86 
      may be termed end points since they at the beginning and end of the set of 
      points 80. The graphics rendering application 56 or operating system 52 
      may be configured to generate a series of cubic Bezier curves creating a 
      smooth curve that connects the points 82, 84, and 86 of the set 80. The 
      term connecting, as used in the current application, includes generating 
      and displaying a graphical curve that starts at one point (coordinate) and 
      moves or leads to another point (coordinate). The series of cubic Bezier 
      curves may consist of a number of curves equal to one less than the total 
      number of points in the set of points 80. Creating this many curves 
      provides a cubic Bezier curve between every pair of consecutive points 
      starting from the first point of a set of points and ending with the last 
      point of a set of points. The size and ordering of the set 80, for 
      example, may imply that a graphics rendering application should generate 
      two (size of set -1) cubic Bezier curves; one cubic Bezier curve 
      connecting the first end point 82 and the second non-end point 84 and 
      another cubic Bezier curve connecting the second non-end point 84 and the 
      third end point 86. In general, the series of cubic Bezier curves may 
      provide a curve between every pair of points (P.sub.n, P.sub.n+1), where n 
      goes from 0 (where the first point of the set of points is point P.sub.0) 
      to two less than the total number of points in the set of points. 
      <BR><BR>[0028] When generating a cubic Bezier curve between consecutive 
      points in a set of points, each non-end point (i.e., every point beside 
      the first and last point of the set) may have two control points 
      associated with it. Each non-end point may have one control point for a 
      cubic Bezier curve connecting itself to a point sequentially before itself 
      in the set of points and one control point for a cubic Bezier curve 
      connecting itself to a point sequentially after itself in the set of 
      points. In contrast, each end point may have only a single control point 
      associated with it since each end point is only included in a single cubic 
      Bezier curve connecting itself to either a point sequentially before or 
      after itself in the set of points. Consequently, two different methods for 
      generating control points may be used by the cubic Bezier curve logic 58. 
      One method may generate two control points for a non-end point, and 
      another method may generate a single control point for an end point. 
      Exemplary techniques for both methods are illustrated in FIGS. 6-21 and 
      will be described in detail below. <BR><BR>[0029] To determine a control 
      point associated with an end point, the cubic Bezier curve logic 58 begins 
      by determining a straight line segment between the end point (P.sub.x) and 
      the next consecutive point (P.sub.x+1 or P.sub.x-1) and a straight line 
      segment between the next consecutive point (P.sub.x+1 or P.sub.x-1) and 
      the next consecutive point therefrom (P.sub.x+2 or P.sub.x-2). For the 
      exemplary set of points 80, as illustrated in FIG. 6, the cubic Bezier 
      curve logic 58 determines a first line segment 90 between the second 
      non-end point 84 and the third end point 86 and a second line segment 92 
      between the second non-end point 84 and the first end point 82. The cubic 
      Bezier curve logic 58 also determines a first horizontal reference line 
      containing the next consecutive point from the end point (P.sub.x+1 or 
      P.sub.x-1) and a second horizontal reference line containing the end point 
      (.sub.x). An exemplary first horizontal line 94 containing the second 
      non-end point 84 and a second horizontal line 96 containing the first end 
      point 82 is illustrated in FIG. 7. <BR><BR>[0030] After generating the 
      horizontal reference lines, the cubic Bezier curve logic 58 determines a 
      first displacement angle between the second line segment and the second 
      horizontal reference line, which contains the end point (P.sub.x). The 
      cubic Bezier curve logic 58 also determines a second displacement angle 
      between the first line segment and the first horizontal reference line 
      containing the next consecutive point to the end point (P.sub.x+1 or 
      P.sub.x-1) The cubic Bezier curve logic 58 also determines a third 
      displacement angle between the second line segment and the first 
      horizontal reference line containing the next consecutive point to the end 
      point (P.sub.x+1 or P.sub.x-1). FIG. 8 illustrates a first displacement 
      angle 100 between the second horizontal reference line 96 and the second 
      line segment 92 and a second displacement angle 102 between the first 
      horizontal reference line 94 and the first line segment 90. The figure 
      also illustrates a third displacement angle 101 between the first 
      horizontal reference line 94 and the second line segment 92. 
      <BR><BR>[0031] Using the first displacement angle and the average of the 
      second displacement angle and the third displacement angle, the cubic 
      Bezier curve logic 58 derives a first control angle. In some embodiments, 
      the first displacement angle is averaged with the average of the second 
      and third displacement angles. An exemplary first control angle 104 based 
      on the first and second displacement angles 100 and 102 is illustrated in 
      FIG. 9. In some embodiments, if the average of the second and third 
      displacement angles falls between the value of the first displacement 
      angle and the value of the first displacement angle minus 180.degree., 
      then the value of the first control angle is based on the average value of 
      the second and thirds displacement angles minus 180.degree.. Other 
      formulas may also be used to derive an angle value for the first control 
      angle. <BR><BR>[0032] After calculating a first control angle, the cubic 
      Bezier curve logic 58 generates a first control ray extending from the end 
      point (P.sub.x) at an angle equal to the first control angle as measured 
      from the horizontal reference line containing the end point (P.sub.x). 
      Again, the value of a first control angle may be measured in a 
      counterclockwise direction from a horizontal reference line. The first 
      control ray generated from the first control angle provides a reference 
      line for a control point for the end point (P.sub.x). An exemplary first 
      control ray 106 starting at the first end point 82 and extending 
      infinitely at an angle equal to the first control value 104 from the 
      horizontal reference line 96 is also illustrated in FIG. 9. <BR><BR>[0033] 
      To determine a precise location for a control point along the first 
      control ray, the cubic Bezier curve logic 58 calculates a first derived 
      distance. The first derived distance specifies a distance or length 
      between the end point and a first control point as measured along the 
      first control ray. In some embodiments, when determining a control point 
      for an end point, the derived distance is equal to half the length of the 
      straight line segment containing the end point. The first derived distance 
      may also be set to other values, such as the average of the first and 
      second straight line segments, one-third the length of the first straight 
      line segment, the value of the longer of the first and second straight 
      line segments minus the shorter of the first and second straight line 
      segments, a constant value, or the like. The particular formula for the 
      first derived distance may depend on the characteristics of the graphics 
      rendering application 56 and/or the set of points. As illustrated in FIG. 
      10, an exemplary first derived distance 107 equal to half the length of 
      the second line segment 92 marks the location of a first control point 
      108. The first control point 108 is associated with the first end point 82 
      and will be used for a cubic Bezier curve connecting the first end point 
      82 and the second non-end point 84. In general, a control point generated 
      or associated with an end point (P.sub.x) is used in a cubic Bezier curve 
      connecting the end point (P.sub.x) and the next consecutive point to the 
      end point (P.sub.x+1 or P.sub.x-1). <BR><BR>[0034] It should be noted that 
      intermediary line segments, reference lines, displacement angles, control 
      rays, control angles, and derived distances are used to generate a control 
      point and may be calculated internally by cubic Bezier curve logic 58. 
      These intermediary calculations and geometric shapes are not, in general, 
      rendered or displayed during the process of generating control points or 
      when the final cubic Bezier curve is displayed. FIG. 11 illustrates the 
      set of points 80 and the first control point 108 after removing the 
      intermediary line segments, reference lines, control ray, and like, which 
      were used to determine the first control point 108. <BR><BR>[0035] In some 
      embodiments, a similar method as described above is used to determine 
      control points associated with a non-end point. The method for non-end 
      points, however, generates two control points instead of one. As before, 
      to start the method, the cubic Bezier curve logic 58 determines a first 
      straight line segment between the non-end point (P.sub.y) and the next 
      consecutive point (P.sub.y+1) and a second line segment between the 
      non-end point (P.sub.y) and the previous consecutive point (P.sub.y-1). 
      Exemplary line segments 90 and 92 are illustrated in FIG. 12. The cubic 
      Bezier curve logic 58 also determines or uses the horizontal reference 
      line 94 containing the non-end point. <BR><BR>[0036] Using the horizontal 
      reference line, which contains the non-end point (P.sub.y), the cubic 
      Bezier curve application determines a fourth displacement angle between 
      the horizontal reference line and the first line segment between the 
      non-end point (P.sub.y) and the next consecutive point (P.sub.y+1). The 
      cubic Bezier curve application also determines a fifth displacement angle 
      between the horizontal reference line containing the non-end point 
      (P.sub.y) and the second line segment connecting the non-end point 
      (P.sub.y) with the previous consecutive point (P.sub.y-1). As previously 
      stated, the displacement angles may be measured in a counterclockwise 
      direction from the horizontal reference line. As illustrated in FIG. 13, 
      an exemplary fourth displacement angle 112 spans from the first horizontal 
      reference line 94 to the first line segment 90 and an exemplary fifth 
      displacement angle 114 spans from the first horizontal reference line 94 
      to the second line segment 92. <BR><BR>[0037] After determining the fourth 
      and fifth displacement angles for the non-end point, the cubic Bezier 
      curve logic 58 calculates a second and third control angle. The values of 
      the second and third control angles may be derived from the values of the 
      fourth and fifth displacement angles. In some embodiments, if the value of 
      the fourth displacement angle is greater than the value of the fifth 
      displacement value, then the value of the second control angle is equal to 
      the average of the values of the fourth and fifth displacement angles plus 
      90.degree. and the value of the third control angle is equal to the 
      average of the values of the fourth and fifth displacement angles minus 
      90.degree.. Otherwise, the value of the second control angle is equal to 
      the average of the values of the fourth and fifth displacement angles 
      minus 90.degree. and the value of the third control angle is equal to the 
      average of the fourth and fifth displacement angles plus 90.degree.. Other 
      methods of calculating the second and third control angles may be used, 
      but the second and third control angles must always be 180.degree. apart. 
      Exemplary second and third control angles 116 and 118 are illustrated in 
      FIG. 14. <BR><BR>[0038] As described above for the first control angle, 
      using the second and third control angles, the cubic Bezier curve logic 58 
      generates a second control ray and a third control ray, respectively. In 
      some embodiments, both the second control ray and the third control ray 
      extend infinitely from the non-end point at angles specified by the second 
      and third control angles respectively. As previously described, the second 
      and third control angles may be measured in a counterclockwise direction 
      from the horizontal reference line that contains the non-end point. The 
      second and third control rays each provide an infinite reference line for 
      a control point associated with the non-end point. FIG. 14 also 
      illustrates an exemplary second control ray 120 extending from the second 
      non-end point 84 at an angle equal to the calculated second control angle 
      116 and an exemplary third control ray 121 extending from the second 
      non-end point 84 at an angle equal to the third control angle 118. Both 
      the second and third control angles are measured from the first horizontal 
      reference line 94. <BR><BR>[0039] To determine precise control points for 
      the non-end point (one control point along each of the second and third 
      control rays), the cubic Bezier curve logic 58 may calculate a second and 
      third derived distance. The second derived distance may specify a distance 
      measured along the second control ray between the non-end point and a 
      second control point for the non-end point. The third derived distance may 
      specify a distance measured along the third control ray between the 
      non-end point and a third control point for the non-end point. The second 
      control point associated with the non-end point may be used in a cubic 
      Bezier curve connecting the non-end point with the previous consecutive 
      point, and the third control point associated with the non-end point may 
      be used in a cubic Bezier curve connecting the non-end point with the next 
      consecutive point. <BR><BR>[0040] In some embodiments, the second derived 
      distance is equal to the third derived distance, and both the second and 
      third derived distances are equal to half the length of the shorter of the 
      two straight line segments previously determined that contain the non-end 
      point. As previously described, other formulas may be used to calculate 
      derived distances. For the exemplary set of points 80, the lines segments 
      containing the second non-end point 84 are the first line segment 90 and 
      the second line segment 92. Consequently, as illustrated in FIG. 15, the 
      values of a second derived distance 122 and a third derived distance 123 
      may be set to half the length of the shorter of the first and second line 
      segments 90 and 92. The second and third derived distances 122 and 123 
      subsequently generate a second control point 124 and a third control point 
      126. <BR><BR>[0041] FIG. 16 illustrates the set of points 80, the first 
      control point 108, the second control point 124, and the third control 
      point 126 with the intermediary reference lines, angles, and rays removed. 
      <BR><BR>[0042] The above method for generating control points for non-end 
      points may be repeated for each non-end point contained within a set of 
      points. In some embodiments, in order to complete a series of cubic Bezier 
      curves connecting a set of points, however, a control point must be 
      generated that is associated with a last point, or a final end point, 
      contained in a set of points. The method previously presented for an end 
      point may be repeated for the last end point. To determine a final control 
      point for the exemplary set of points 80, the cubic Bezier curve logic 58 
      starts the method, as illustrated in FIG. 17, by determining the first 
      line segment 90 between the second non-end point 84 and the third end 
      point 86 and the second line segment 92 between the second non-end point 
      84 and the first end point 82. The cubic Bezier curve logic 58 also 
      determines the first horizontal line 94 containing the second non-end 
      point 84 and a third horizontal line 130 containing the third end point 
      86, as illustrated in FIG. 17. <BR><BR>[0043] After determining the 
      horizontal reference lines 94 and 130, the cubic Bezier curve logic 58 
      determines a sixth displacement angle 132 between the third horizontal 
      reference line 130 and the first line segment 90 and a seventh 
      displacement angle 134 between the first horizontal reference line 94 and 
      the second line segment 92 and an eighth displacement angle 135 between 
      the first horizontal reference line 94 and the first line segment 90 (see 
      FIG. 18). <BR><BR>[0044] Using the sixth displacement angle 132 and the 
      average of the seventh displacement angle 134 and the eighth displacement 
      angle 135, the cubic Bezier curve logic 58 derives a fourth control angle 
      136, as illustrated in FIG. 19. In some embodiments, the sixth 
      displacement angle is averaged with the average of the seventh and eighth 
      displacement angles. In some embodiments, if the average of the seventh 
      and eighth displacement angles falls between the value of the sixth 
      displacement angle and the value of the sixth displacement angle minus 
      180.degree., then the value of the fourth control angle uses the average 
      value of the seventh and eighth displacement angles minus 180.degree.. As 
      previously indicated, other formulas may also be used to derive an angle 
      value for the fourth control angle 136. <BR><BR>[0045] After calculating 
      the fourth control angle 136, the cubic Bezier curve logic 58 generates a 
      fourth control ray 138 extending from the third end point 86 at an angle 
      equal to the value of the fourth control angle 136 as measured from third 
      horizontal reference line 130 (see FIG. 19). Again, the value of the 
      fourth control angle 136 may be measured in a counterclockwise direction 
      from the third horizontal reference line 130. The fourth control ray 138 
      generated from the fourth control angle 136 provides a reference line for 
      a fourth control point 140 associated with the third end point 86. 
      <BR><BR>[0046] To determine a precise location for the fourth control 
      point 140 along the fourth control ray 138, the cubic Bezier curve logic 
      58 calculates a fourth derived distance 141. The fourth derived distance 
      141 specifies a distance or length between the third end point 86 and the 
      fourth control point 140 as measured along the fourth control ray 138. In 
      some embodiments, the fourth derived distance 141 is equal to half the 
      length of the first line segment 90 that contains the third end point 86. 
      The fourth derived distance 141, illustrated in FIG. 20, is equal to half 
      the length of the first line segment 90 and marks the location of the 
      fourth control point 140. The control point 140, associated with the third 
      end point 86, is used in a cubic Bezier curve connecting the third end 
      point 86 and the second non-end point 84. <BR><BR>[0047] FIG. 21 
      illustrates the set of points 80, the first control point 108, the second 
      control point 124, the third control point 126, and the fourth control 
      point 140 with the intermediary line segments, reference lines, 
      displacement angles, and the like removed. Using the set of points 80; the 
      generated control points 108, 124, 126, and 140; and a set of cubic Bezier 
      curve equations, the cubic Bezier curve logic 58, graphics rendering 
      application 56, or operating system 52 can generate a series of cubic 
      Bezier curves connecting the first end point 82, the second non-end point 
      84, and the third end point 86. FIG. 22 illustrates the set of points 80 
      connected by a cubic Bezier curve 148 and a cubic Bezier curve 149. It 
      should be noted that the control points 108, 124, 126, and 140 and the 
      dashed line connecting each control point to its respective point from the 
      set of points 80, are shown for illustrative purposes and may not be 
      displayed with the cubic Bezier curves 148 and 149. The cubic Bezier curve 
      148 connects the first end point 82 to the second non-end point 84 by a 
      spline 150. The shape of the spline 150 is influenced by the first control 
      point 108 associated with the first end point 82 and the second control 
      point 124 associated with the second non-end point 84. The cubic Bezier 
      curve 149 connects the second non-end point 84 to the third end point 86 
      by a spline 152. The shape of the spline 152 is influenced by the third 
      control point 126 associated with the second non-end point 84 and the 
      fourth control point 140 associated with the third end point 86. As 
      illustrated in FIG. 22, the generated control points 108, 124, 126, and 
      140 are used to create a series of cubic Bezier curves 148 and 149 that 
      smoothly connect the set of points 80. <BR><BR>[0048] Various features and 
      advantages of the invention are set forth in the following claims. 
      <BR><BR><BR><BR><A 
      href="http://www.freshpatents.com/Methods-for-generating-control-points-for-cubic-bezier-curves-dt20060302ptan20060044305.php">Brief 
      Patent Description</A> - <STRONG>Full Patent Description</STRONG> - <A 
      href="http://www.freshpatents.com/Methods-for-generating-control-points-for-cubic-bezier-curves-dt20060302ptan20060044305.php?type=claims">Patent 
      Application Claims</A><BR>Click on the above for other options relating to 
      this Methods for generating control points for cubic bezier curves patent 
      application.<BR><BR><STRONG>Related Patent Applications:</STRONG> 
      <BR><BR>20070103460 - <A 
      href="http://www.freshpatents.com/Determining-camera-motion-dt20070510ptan20070103460.php">Determining 
      camera motion</A> - Camera motion is determined in a three-dimensional 
      image capture system using a combination of two-dimensional image data and 
      three-dimensional point cloud data available from a stereoscopic, 
      multi-aperture, or similar camera system. More specifically, a rigid 
      transformation of point cloud data between two three-dimensional point 
      clouds may be more efficiently parameterized ...<BR><BR>20070103459 - <A 
      href="http://www.freshpatents.com/Method-and-apparatus-for-integrating-three-dimensional-and-two-dimensional-monitors-with-medical-diagnostic-imaging-workstations-dt20070510ptan20070103459.php">Method 
      and apparatus for integrating three-dimensional and two-dimensional 
      monitors with medical diagnostic imaging workstations</A> - A system and 
      method for utilizing a spatial three-dimensional display unit with a 
      medical diagnostic imaging system is disclosed. The medical diagnostic 
      imaging system may be a picture archival communication system. The system 
      may include at least one two-dimensional display unit and an additional 
      spatial three-dimensional display unit. Accordingly a 
      ...<BR><BR>20070103461 - <A 
      href="http://www.freshpatents.com/Virtual-space-image-display-method-apparatus-virtual-space-image-display-program-and-recording-medium-dt20070510ptan20070103461.php">Virtual 
      space image display method, apparatus, virtual space image display 
      program, and recording medium</A> - Three-dimensional map data of drawing 
      objects in respective division areas and distant view images in respective 
      directions on map data, which are obtained when viewing is made from 
      insides of the respective division areas, are held in a recording medium, 
      three-dimensional map data of a drawing object for a near 
      ...<BR><BR><BR>### <BR><A 
      href="https://www.freshpatents.com/account/organizer/list_folder_az.php?fset=default"><IMG 
      height=14 alt="monitor keywords" 
      src="Methods for generating control points for cubic bezier curves patent invention_files/iconsm_monitorkeywords.gif" 
      width=100 align=absMiddle border=0></A><BR><BR><IMG height=24 
      src="Methods for generating control points for cubic bezier curves patent invention_files/monitor_small.gif" 
      width=24 align=absMiddle border=0></A> How <STRONG>KEYWORD 
      MONITOR</STRONG> works... <I>a </I><STRONG>FREE</STRONG> <I>service from 
      FreshPatents</I><BR>1. <A href="https://www.freshpatents.com/login/">Sign 
      up</A> (takes 30 seconds). 2. <A 
      href="https://www.freshpatents.com/login/">Fill in the keywords</A> to be 
      monitored. <BR>3. Each week you receive an email with patent applications 
      related to your keywords.&nbsp;&nbsp;<BR><STRONG><A 
      href="https://www.freshpatents.com/login/">Start now!</A></STRONG> - 
      Receive info on patent apps like Methods for generating control points for 
      cubic bezier curves or other areas of interest.<BR>###<BR><BR><BR>Previous 
      Patent Application:<BR><A 
      href="http://www.freshpatents.com/Power-supply-apparatus-and-method-dt20060302ptan20060044303.php">Power 
      supply apparatus and method</A><BR>Next Patent Application:<BR><A 
      href="http://www.freshpatents.com/Rendering-apparatus-and-method-for-a-real-time-3d-ultrasound-diagnostic-system-dt20060302ptan20060044306.php">Rendering 
      apparatus and method for a real-time 3d ultrasound diagnostic 
      system</A><BR>Industry Class:<BR><A 
      href="http://www.freshpatents.com/Computer-graphics-processing-operator-interface-processing-and-selective-visual-display-systems-dtnewntc345.php">Computer 
      graphics processing, operator interface processing, and selective visual 
      display systems</A><BR><BR>###<BR><BR>
      <DIV class=footer>Design/code © 2004-2006 Freshpatents.com. <A 
      href="http://www.freshpatents.com/terms/">Website Terms and 
      Conditions</A><BR>Patent data source: United States Patent and Trademark 
      Office<BR>Information published here is an abstract for 
      research/educational purposes.<BR>Complete official applications are on 
      file at the USPTO and may contain additional 
      data/images.<BR>FreshPatents.com is not affiliated with or endorsed by the 
      USPTO or firms/individuals related to listed patents.</DIV><A 
      href="http://www.freshpatents.com/contact/support.php">FreshPatents.com 
      Support</A><BR>Thank you for viewing the <EM>Methods for generating 
      control points for cubic bezier curves</EM> patent info.<BR><A 
      href="http://www.freshpatents.com/iplog.php">IP-related news and 
      info</A><BR><BR><BR>Results in 0.25498 seconds<BR><BR><FONT 
      color=silver></FONT><BR>Other interesting Feshpatents.com 
      categories:<BR><A 
      href="http://www.freshpatents.com/Qualcomm-Incorporated-Patents-Department-cndirq.php">Qualcomm 
      </A>, <A 
      href="http://www.freshpatents.com/Scheringplough-Corporation-Patent-Department-k61-1990-cndirs.php">Schering-Plough 
      </A>, <A 
      href="http://www.freshpatents.com/Schlumberger-Oilfield-Services-cndirs.php">Schlumberger 
      </A>, <A 
      href="http://www.freshpatents.com/Seagate-Technology-LLC-cndirs.php">Seagate 
      </A>, <A 
      href="http://www.freshpatents.com/Siemens-Corporation-Intellectual-Property-Dept-cndirs.php">Siemens 
      </A>, <A 
      href="http://www.freshpatents.com/Texas-Instruments-Incorporated-cndirt.php">Texas 
      Instruments </A>, </TD>
    <TD vAlign=top width=160>
      <SCRIPT type=text/javascript><!--
google_ad_client = "pub-0988628760264603";
google_ad_width = 160;
google_ad_height = 600;
google_ad_format = "160x600_as";
google_ad_type = "text";
//2007-01-23: fp_patentapp_3
google_ad_channel = "4209256351";
google_color_border = "FFFFFF";
google_color_bg = "FFFFFF";
google_color_link = "0000FF";
google_color_text = "000000";
google_color_url = "008000";
//--></SCRIPT>

      <SCRIPT 
      src="Methods for generating control points for cubic bezier curves patent invention_files/show_ads.js" 
      type=text/javascript>
</SCRIPT>
    </TD></TR></TBODY></TABLE>
<SCRIPT 
src="Methods for generating control points for cubic bezier curves patent invention_files/urchin.js" 
type=text/javascript>
</SCRIPT>

<SCRIPT 
type=text/javascript>
_uacct = "UA-1171068-1";
urchinTracker();
</SCRIPT>
</DIV></BODY></HTML>
